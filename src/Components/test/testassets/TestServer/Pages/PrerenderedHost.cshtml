@page
@using BasicTestApp.RouterTest
@using Microsoft.AspNetCore.Mvc.ViewFeatures
<!DOCTYPE html>
<html>
<head>
    <title>Prerendering tests</title>
    <base href="~/" />
</head>
<body>
    <app>@(await Html.RenderComponentAsync<TestRouter>())</app>

    @*
        So that E2E tests can make assertions about both the prerendered and
        interactive states, we only load the .js file when told to.
    *@
    <hr />
    <button id="load-boot-script" onclick="loadBootScript(event)">Load boot script</button>
    <script>
    function loadBootScript(event) {
        event.srcElement.disabled = true;
        var scriptElem = document.createElement('script');
        scriptElem.src = '_framework/blazor.server.js';
        document.body.appendChild(scriptElem);
    }

    // Used by InteropOnInitializationComponent
    function setElementValue(element, newValue) {
      element.value = newValue;
      return element.value;
    }
    </script>
</body>
</html>
